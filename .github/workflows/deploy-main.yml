name: Publish Test Page

on:
  push:
    branches:
      - develop
      - r/*.x

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect:
    runs-on: ubuntu-latest
    steps:
      - name: determine the correct test server
        run: echo "TEST_SERVER=`./.github/get-release-server.sh`" >> GITHUB_ENV

  build:
    if: github.repository_owner == 'opencast'
    needs: detect
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: get node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: download dependencies
        run: npm ci

      - name: build project
        env:
          NODE_ENV: development
          VITE_TEST_SERVER_URL: ${{ TEST_SERVER }}
          VITE_TEST_SERVER_AUTH: "admin:opencast"
        run: npm run build

      - name: restore cache
        id: cache-builds
        run: actions/cache/restore@v4
        with:
          path: gh-pages
          id: gh-pages

      - name: create pages directory
        run: mkdir -p gh-pages

      - name: include admin interface
        run: mv build gh-pages/${{ github.ref }}/admin-ui

      - name: include landing page
        run: cp .github/demo-page.html gh-pages/index.html

      - name: upload test page artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./gh-pages

      - name: cache built artifacts
        uses: actions/cache@v4
        with:
          path: gh-pages
          id: gh-pages

  deploy:
    if: github.repository_owner == 'opencast'
    needs: build

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
